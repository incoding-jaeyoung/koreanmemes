{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/lib/auth.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\n\ninterface User {\n  email: string\n  role: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  login: (email: string, password: string) => Promise<{ success: boolean; message: string }>\n  logout: () => Promise<void>\n  checkAuth: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null)\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const checkAuth = async () => {\n    try {\n      const response = await fetch('/api/auth/me')\n      const data = await response.json()\n\n      if (data.success) {\n        setUser(data.user)\n      } else {\n        setUser(null)\n      }\n    } catch (error) {\n      console.error('Auth check error:', error)\n      setUser(null)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      })\n\n      const data = await response.json()\n\n      if (data.success) {\n        setUser(data.user)\n        return { success: true, message: data.message }\n      } else {\n        return { success: false, message: data.message }\n      }\n    } catch (error) {\n      console.error('Login error:', error)\n      return { success: false, message: '로그인 중 오류가 발생했습니다.' }\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await fetch('/api/auth/logout', {\n        method: 'POST',\n      })\n      setUser(null)\n    } catch (error) {\n      console.error('Logout error:', error)\n    }\n  }\n\n  useEffect(() => {\n    checkAuth()\n  }, [])\n\n  const isAuthenticated = !!user\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      isLoading,\n      isAuthenticated,\n      login,\n      logout,\n      checkAuth\n    }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n} "],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAkBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA0B;AAMnD,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,QAAQ,KAAK,IAAI;YACnB,OAAO;gBACL,QAAQ;YACV;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,QAAQ;QACV,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,mBAAmB;gBAC9C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,OAAO,EAAE;gBAChB,QAAQ,KAAK,IAAI;gBACjB,OAAO;oBAAE,SAAS;oBAAM,SAAS,KAAK,OAAO;gBAAC;YAChD,OAAO;gBACL,OAAO;oBAAE,SAAS;oBAAO,SAAS,KAAK,OAAO;gBAAC;YACjD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,OAAO;gBAAE,SAAS;gBAAO,SAAS;YAAoB;QACxD;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,MAAM,oBAAoB;gBAC9B,QAAQ;YACV;YACA,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC,CAAC;IAE1B,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAC3B;YACA;YACA;YACA;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/components/Header.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { useState } from 'react'\nimport { useAuth } from '@/lib/auth'\nimport { \n  Globe, \n  Menu, \n  X, \n  Plus, \n  LogIn,\n  LogOut,\n  User\n} from 'lucide-react'\n\nexport function Header() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const { isAuthenticated, logout } = useAuth()\n\n  const handleLogout = async () => {\n    await logout()\n    setIsMenuOpen(false)\n  }\n\n  return (\n    <header className=\"bg-white shadow-sm border-b\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <Globe className=\"h-8 w-8 text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-xl text-gray-900\">Korean Memes</span>\n              <span className=\"text-xs text-gray-500\">Korean to Global</span>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          {/* <nav className=\"hidden md:flex items-center space-x-8\">\n            <Link href=\"/\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n              Home\n            </Link>\n            <Link href=\"/category/humor\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n              K-Humor\n            </Link>\n            <Link href=\"/category/culture\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n              K-Culture\n            </Link>\n            <Link href=\"/category/drama\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n              K-Drama\n            </Link>\n            <Link href=\"/category/tech\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n              K-Tech\n            </Link>\n          </nav> */}\n\n          {/* Action Buttons */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            {isAuthenticated ? (\n              <>\n                <Link \n                  href=\"/write\" \n                  className=\"flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                  <span>Write</span>\n                </Link>\n                <button \n                  onClick={handleLogout}\n                  className=\"flex items-center space-x-2 text-gray-700 hover:text-red-600 transition-colors\"\n                >\n                  <LogOut className=\"h-4 w-4\" />\n                  <span>Logout</span>\n                </button>\n              </>\n            ) : (\n              <>\n                <Link \n                  href=\"/login\" \n                  className=\"flex text-sm items-center space-x-2 text-gray-700 hover:text-blue-600 transition-colors\"\n                >\n                  <LogIn className=\"h-4 w-4\" />\n                  <span>Login</span>\n                </Link>\n              </>\n            )}\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            className=\"md:hidden p-2\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n          >\n            {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMenuOpen && (\n          <div className=\"md:hidden py-4 border-t\">\n            <nav className=\"flex flex-col space-y-4\">\n              <Link href=\"/\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n                Home\n              </Link>\n              <Link href=\"/category/humor\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n                K-Humor\n              </Link>\n              <Link href=\"/category/culture\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n                K-Culture\n              </Link>\n              <Link href=\"/category/drama\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n                K-Drama\n              </Link>\n              <Link href=\"/category/tech\" className=\"text-gray-700 hover:text-blue-600 transition-colors\">\n                K-Tech\n              </Link>\n              <div className=\"pt-4 border-t\">\n                {isAuthenticated ? (\n                  <>\n                    <Link \n                      href=\"/write\" \n                      className=\"flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors w-fit mb-3\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                      <span>Write</span>\n                    </Link>\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-600 mb-3\">\n                      <User className=\"h-4 w-4\" />\n                      <span>관리자로 로그인됨</span>\n                    </div>\n                    <button \n                      onClick={handleLogout}\n                      className=\"flex items-center space-x-2 text-gray-700 hover:text-red-600 transition-colors\"\n                    >\n                      <LogOut className=\"h-4 w-4\" />\n                      <span>Logout</span>\n                    </button>\n                  </>\n                ) : (\n                  <Link \n                    href=\"/login\" \n                    className=\"flex items-center space-x-2 text-gray-700 hover:text-blue-600 transition-colors\"\n                  >\n                    <LogIn className=\"h-4 w-4\" />\n                    <span>Login</span>\n                  </Link>\n                )}\n              </div>\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/components/Footer.tsx"],"sourcesContent":["'use client'\n\nimport { \n} from 'lucide-react'\n\nexport function Footer() {\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-12\">\n        {/* <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div className=\"col-span-1 md:col-span-2\">\n            <Link href=\"/\" className=\"flex items-center space-x-2 mb-4\">\n              <Globe className=\"h-8 w-8 text-blue-400\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl\">Korean Memes</span>\n                <span className=\"text-sm text-gray-400\">Korean to Global</span>\n              </div>\n            </Link>\n            <p className=\"text-gray-300 mb-6 max-w-md text-sm\">\n              A platform for sharing Korean humor, culture, and trends with the world. \n              Discover the charm of K-culture together!\n            </p>\n          </div>\n        </div> */}\n\n        {/* Social Links Section */}\n        {/* <div className=\"border-t border-gray-800 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <div className=\"flex items-center space-x-6 mb-4 md:mb-0\">\n              <h4 className=\"font-medium text-gray-300\">Follow Us</h4>\n              <div className=\"flex items-center space-x-4\">\n                <a \n                  href=\"https://github.com/incoding\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-gray-400 hover:text-blue-400 transition-colors\"\n                >\n                  <Github className=\"h-5 w-5\" />\n                </a>\n                <a \n                  href=\"https://twitter.com/incoding\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-gray-400 hover:text-blue-400 transition-colors\"\n                >\n                  <Twitter className=\"h-5 w-5\" />\n                </a>\n                <a \n                  href=\"https://instagram.com/incoding\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-gray-400 hover:text-blue-400 transition-colors\"\n                >\n                  <Instagram className=\"h-5 w-5\" />\n                </a>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-6\">\n              <Link href=\"/privacy\" className=\"text-gray-400 hover:text-blue-400 transition-colors text-sm\">\n                Privacy Policy\n              </Link>\n              <Link href=\"/terms\" className=\"text-gray-400 hover:text-blue-400 transition-colors text-sm\">\n                Terms of Service\n              </Link>\n            </div>\n          </div>\n        </div> */}\n\n        {/* Bottom Copyright */}\n        <div className=\"text-center justify-center\">\n          <div className=\"flex flex-col md:flex-row justify-center items-center\">\n            <p className=\"text-gray-400 text-sm mb-2 md:mb-0\">\n              © {currentYear} <span className=\"font-medium text-blue-400\">koreanmemes</span>. All rights reserved.\n            </p>\n            {/* <div className=\"flex items-center space-x-1 text-gray-400 text-sm\">\n              <span>Made with</span>\n              <Heart className=\"h-4 w-4 text-red-500 fill-current\" />\n              <span>in Seoul, Korea</span>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n} "],"names":[],"mappings":";;;;AAAA;;;AAKO,SAAS;IACd,MAAM,cAAc,IAAI,OAAO,WAAW;IAE1C,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBA8Db,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;;4BAAqC;4BAC7C;4BAAY;0CAAC,8OAAC;gCAAK,WAAU;0CAA4B;;;;;;4BAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY5F","debugId":null}}]
}