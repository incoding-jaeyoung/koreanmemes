{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/components/ImageUpload.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, DragEvent } from 'react'\nimport { Upload, X, Image as ImageIcon, Loader2, Link, Languages } from 'lucide-react'\nimport React from 'react'\n\ninterface ImageUploadProps {\n  onImageUploaded: (url: string) => void\n  currentImage?: string\n  onRemoveImage: () => void\n}\n\nexport function ImageUpload({ onImageUploaded, currentImage, onRemoveImage }: ImageUploadProps) {\n  const [isUploading, setIsUploading] = useState(false)\n  const [isDragOver, setIsDragOver] = useState(false)\n  const [showUrlInput, setShowUrlInput] = useState(false)\n  const [urlInput, setUrlInput] = useState('')\n  const [translateEnabled, setTranslateEnabled] = useState(false)\n  const [manualTranslateEnabled, setManualTranslateEnabled] = useState(true)\n  const [selectedFile, setSelectedFile] = useState<File | null>(null)\n  const [showEditor, setShowEditor] = useState(false)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handleFileUpload = async (file: File) => {\n    setIsUploading(true)\n    \n    try {\n      // 수동 번역 모드인 경우\n      if (manualTranslateEnabled) {\n        setSelectedFile(file)\n        setShowEditor(true)\n        setIsUploading(false)\n        return\n      }\n\n      // 자동 번역 또는 일반 업로드\n      const formData = new FormData()\n      formData.append('image', file)\n      formData.append('translateImage', translateEnabled.toString())\n\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      })\n\n      const result = await response.json()\n      \n      if (result.success) {\n        onImageUploaded(result.imageUrl)\n      } else {\n        throw new Error(result.error || 'Upload failed')\n      }\n    } catch (error) {\n      console.error('Upload error:', error)\n    } finally {\n      setIsUploading(false)\n    }\n  }\n\n  // 수동 번역 완료 핸들러\n  const handleManualTranslationComplete = (translatedImageUrl: string) => {\n    onImageUploaded(translatedImageUrl)\n    setShowEditor(false)\n    setSelectedFile(null)\n  }\n\n  // 수동 번역 취소 핸들러\n  const handleManualTranslationCancel = () => {\n    setShowEditor(false)\n    setSelectedFile(null)\n    setIsUploading(false)\n  }\n\n  // 자동/수동 번역 전환 시 초기화\n  const handleTranslateToggle = (enabled: boolean) => {\n    setTranslateEnabled(enabled)\n    if (enabled) {\n      setManualTranslateEnabled(false)\n    }\n  }\n\n  const handleManualTranslateToggle = (enabled: boolean) => {\n    setManualTranslateEnabled(enabled)\n    if (enabled) {\n      setTranslateEnabled(false)\n    }\n  }\n\n  const handleUrlSubmit = () => {\n    if (urlInput.trim()) {\n      onImageUploaded(urlInput.trim())\n      setUrlInput('')\n      setShowUrlInput(false)\n    }\n  }\n\n  const handleDrop = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(false)\n    \n    const files = Array.from(e.dataTransfer.files)\n    if (files.length > 0) {\n      handleFileUpload(files[0])\n    }\n  }\n\n  const handleDragOver = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(true)\n  }\n\n  const handleDragLeave = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(false)\n  }\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (files && files.length > 0) {\n      handleFileUpload(files[0])\n    }\n  }\n\n  const handleClick = () => {\n    fileInputRef.current?.click()\n  }\n\n  // 수동 번역 편집기가 활성화된 경우\n  if (showEditor && selectedFile) {\n    const ImageTranslator = React.lazy(() => import('./ImageTranslator'))\n    \n    return (\n      <React.Suspense fallback={<div className=\"text-center py-8\">Loading editor...</div>}>\n        <ImageTranslator\n          imageFile={selectedFile}\n          onTranslationComplete={handleManualTranslationComplete}\n          onCancel={handleManualTranslationCancel}\n        />\n      </React.Suspense>\n    )\n  }\n\n  if (currentImage) {\n    return (\n      <div className=\"relative\">\n        <img \n          src={currentImage} \n          alt=\"Uploaded preview\" \n          className=\"w-full max-w-md h-48 object-cover rounded-lg border\"\n        />\n        <button\n          type=\"button\"\n          onClick={onRemoveImage}\n          className=\"absolute top-2 right-2 p-1 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors\"\n        >\n          <X className=\"h-4 w-4\" />\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleFileSelect}\n        className=\"hidden\"\n      />\n      \n      {/* 번역 옵션들 */}\n      <div className=\"space-y-3\">\n        {/* 자동 번역 */}\n        <div className=\"flex items-center gap-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center gap-2\">\n            <Languages className=\"h-5 w-5 text-blue-600\" />\n            <span className=\"text-sm font-medium text-blue-900\">Auto Translation</span>\n          </div>\n          <label className=\"relative inline-flex items-center cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={translateEnabled}\n              onChange={(e) => handleTranslateToggle(e.target.checked)}\n              className=\"sr-only\"\n            />\n            <div className={`relative w-11 h-6 rounded-full transition-colors ${\n              translateEnabled ? 'bg-blue-600' : 'bg-gray-300'\n            }`}>\n              <div className={`absolute top-0.5 left-0.5 w-5 h-5 bg-white rounded-full transition-transform ${\n                translateEnabled ? 'translate-x-5' : 'translate-x-0'\n              }`} />\n            </div>\n          </label>\n          <span className=\"text-xs text-blue-700\">\n            {translateEnabled ? 'Korean text will be auto-translated' : 'Upload original image'}\n          </span>\n        </div>\n\n        {/* 수동 번역 */}\n        <div className=\"flex items-center gap-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"h-5 w-5 text-green-600\">🎯</div>\n            <span className=\"text-sm font-medium text-green-900\">Manual Translation</span>\n          </div>\n          <label className=\"relative inline-flex items-center cursor-pointer\">\n            <input\n              type=\"checkbox\"\n              checked={manualTranslateEnabled}\n              onChange={(e) => handleManualTranslateToggle(e.target.checked)}\n              className=\"sr-only\"\n            />\n            <div className={`relative w-11 h-6 rounded-full transition-colors ${\n              manualTranslateEnabled ? 'bg-green-600' : 'bg-gray-300'\n            }`}>\n              <div className={`absolute top-0.5 left-0.5 w-5 h-5 bg-white rounded-full transition-transform ${\n                manualTranslateEnabled ? 'translate-x-5' : 'translate-x-0'\n              }`} />\n            </div>\n          </label>\n          <span className=\"text-xs text-green-700\">\n            {manualTranslateEnabled ? 'Select text areas manually' : 'Drag to select text areas'}\n          </span>\n        </div>\n      </div>\n      \n      {/* 파일 업로드 영역 */}\n      <div\n        onClick={handleClick}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        className={`relative border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${\n          isDragOver \n            ? 'border-blue-500 bg-blue-50' \n            : 'border-gray-300 hover:border-gray-400'\n        } ${isUploading ? 'pointer-events-none opacity-50' : ''}`}\n      >\n        {isUploading ? (\n          <div className=\"flex flex-col items-center gap-2\">\n            <Loader2 className=\"h-8 w-8 text-blue-500 animate-spin\" />\n            <p className=\"text-sm text-gray-600\">\n              {translateEnabled ? 'Translating and uploading...' : \n               manualTranslateEnabled ? 'Opening editor...' : 'Uploading...'}\n            </p>\n          </div>\n        ) : (\n          <div className=\"flex flex-col items-center gap-2\">\n            <div className=\"flex items-center gap-2 text-gray-400\">\n              <Upload className=\"h-8 w-8\" />\n              <ImageIcon className=\"h-8 w-8\" />\n              {translateEnabled && <Languages className=\"h-8 w-8 text-blue-500\" />}\n              {manualTranslateEnabled && <div className=\"h-8 w-8 text-green-500\">🎯</div>}\n            </div>\n            <div>\n              <p className=\"text-sm font-medium text-gray-900\">\n                Click to upload or drag and drop\n              </p>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                PNG, JPG, GIF up to 10MB\n                {translateEnabled && (\n                  <span className=\"block text-blue-600 font-medium\">\n                    🇰🇷 Korean text will be auto-translated to English\n                  </span>\n                )}\n                {manualTranslateEnabled && (\n                  <span className=\"block text-green-600 font-medium\">\n                    🎯 Select text areas manually with canvas editor\n                  </span>\n                )}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* URL 입력 옵션 */}\n      <div className=\"text-center\">\n        <button\n          type=\"button\"\n          onClick={() => setShowUrlInput(!showUrlInput)}\n          className=\"text-sm text-blue-600 hover:text-blue-700 flex items-center gap-1 mx-auto\"\n        >\n          <Link className=\"h-4 w-4\" />\n          또는 이미지 URL 직접 입력\n        </button>\n        \n        {showUrlInput && (\n          <div className=\"mt-3 flex gap-2\">\n            <input\n              type=\"url\"\n              value={urlInput}\n              onChange={(e) => setUrlInput(e.target.value)}\n              placeholder=\"https://picsum.photos/600/400\"\n              className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg text-sm\"\n            />\n            <button\n              type=\"button\"\n              onClick={handleUrlSubmit}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\n            >\n              확인\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/components/MultipleImageUpload.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, DragEvent, useEffect } from 'react'\nimport { Image as ImageIcon, Loader2, Plus, Edit3, Trash2, ChevronUp, ChevronDown, GripVertical } from 'lucide-react'\nimport React from 'react'\n\ninterface UploadedImage {\n  id: string\n  url: string\n  file?: File\n  isEditing?: boolean\n}\n\ninterface MultipleImageUploadProps {\n  onImagesChange: (images: string[]) => void\n  currentImages?: string[]\n  maxImages?: number\n}\n\nexport function MultipleImageUpload({ onImagesChange, currentImages = [], maxImages = 5 }: MultipleImageUploadProps) {\n  const [images, setImages] = useState<UploadedImage[]>([])\n  const [isUploading, setIsUploading] = useState(false)\n  const [isDragOver, setIsDragOver] = useState(false)\n  const [editingImage, setEditingImage] = useState<File | null>(null)\n  const [editingImageId, setEditingImageId] = useState<string | null>(null)\n  const [draggedImageId, setDraggedImageId] = useState<string | null>(null)\n  const [dragOverImageId, setDragOverImageId] = useState<string | null>(null)\n  const [isInitialized, setIsInitialized] = useState(false)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  // 초기 이미지 설정을 useEffect로 이동\n  useEffect(() => {\n    if (currentImages.length > 0 && !isInitialized) {\n      const initialImages = currentImages.map((url, index) => ({ \n        id: `existing-${index}`, \n        url \n      }))\n      setImages(initialImages)\n      setIsInitialized(true)\n    } else if (currentImages.length === 0 && !isInitialized) {\n      // 초기 이미지가 없어도 초기화 완료로 표시\n      setIsInitialized(true)\n    }\n  }, [currentImages, isInitialized])\n\n  // 이미지 상태가 변경될 때마다 부모에게 알림 (useEffect 사용으로 렌더링 에러 방지)\n  useEffect(() => {\n    if (isInitialized) {\n      const imageUrls = images.map(img => img.url)\n      console.log('=== useEffect 이미지 변경 알림 ===')\n      console.log('현재 images:', images)\n      console.log('추출된 URLs:', imageUrls)\n      onImagesChange(imageUrls)\n    }\n  }, [images, isInitialized, onImagesChange])\n\n  const handleFileUpload = async (files: FileList | File[]) => {\n    if (images.length >= maxImages) {\n      alert(`최대 ${maxImages}개의 이미지만 업로드할 수 있습니다.`)\n      return\n    }\n\n    setIsUploading(true)\n    \n    try {\n      const fileArray = Array.from(files)\n      const availableSlots = maxImages - images.length\n      const filesToUpload = fileArray.slice(0, availableSlots)\n\n      for (const file of filesToUpload) {\n        const formData = new FormData()\n        formData.append('image', file)\n        formData.append('translateImage', 'false') // 기본적으로 원본 이미지 업로드\n\n        const response = await fetch('/api/upload', {\n          method: 'POST',\n          body: formData,\n        })\n\n        const result = await response.json()\n        \n        if (result.success) {\n          const newImage: UploadedImage = {\n            id: `img-${Date.now()}-${Math.random()}`,\n            url: result.imageUrl,\n            file: file\n          }\n          \n          setImages(prev => {\n            const updated = [...prev, newImage]\n            // 직접 알림 제거 - useEffect가 처리함\n            return updated\n          })\n        } else {\n          throw new Error(result.error || 'Upload failed')\n        }\n      }\n    } catch (error) {\n      console.error('Upload error:', error)\n      alert('이미지 업로드에 실패했습니다.')\n    } finally {\n      setIsUploading(false)\n    }\n  }\n\n  const handleRemoveImage = (imageId: string) => {\n    setImages(prev => {\n      const updated = prev.filter(img => img.id !== imageId)\n      // 직접 알림 제거 - useEffect가 처리함\n      return updated\n    })\n  }\n\n  const handleEditImage = (imageId: string) => {\n    const image = images.find(img => img.id === imageId)\n    if (image && image.file) {\n      setEditingImage(image.file)\n      setEditingImageId(imageId)\n    } else {\n      alert('이 이미지는 편집할 수 없습니다. (원본 파일이 없음)')\n    }\n  }\n\n  // 순서 변경 함수\n  const moveImage = (fromIndex: number, toIndex: number) => {\n    setImages(prev => {\n      const updated = [...prev]\n      const [movedImage] = updated.splice(fromIndex, 1)\n      updated.splice(toIndex, 0, movedImage)\n      // 직접 알림 제거 - useEffect가 처리함\n      return updated\n    })\n  }\n\n  // 화살표 버튼으로 순서 변경\n  const handleMoveUp = (imageId: string) => {\n    const currentIndex = images.findIndex(img => img.id === imageId)\n    if (currentIndex > 0) {\n      moveImage(currentIndex, currentIndex - 1)\n    }\n  }\n\n  const handleMoveDown = (imageId: string) => {\n    const currentIndex = images.findIndex(img => img.id === imageId)\n    if (currentIndex < images.length - 1) {\n      moveImage(currentIndex, currentIndex + 1)\n    }\n  }\n\n  // 드래그 앤 드롭 이벤트 핸들러들\n  const handleImageDragStart = (e: React.DragEvent, imageId: string) => {\n    setDraggedImageId(imageId)\n    e.dataTransfer.effectAllowed = 'move'\n  }\n\n  const handleImageDragOver = (e: React.DragEvent, imageId: string) => {\n    e.preventDefault()\n    e.dataTransfer.dropEffect = 'move'\n    setDragOverImageId(imageId)\n  }\n\n  const handleImageDragLeave = () => {\n    setDragOverImageId(null)\n  }\n\n  const handleImageDrop = (e: React.DragEvent, targetImageId: string) => {\n    e.preventDefault()\n    \n    if (draggedImageId && draggedImageId !== targetImageId) {\n      const fromIndex = images.findIndex(img => img.id === draggedImageId)\n      const toIndex = images.findIndex(img => img.id === targetImageId)\n      \n      if (fromIndex !== -1 && toIndex !== -1) {\n        moveImage(fromIndex, toIndex)\n      }\n    }\n    \n    setDraggedImageId(null)\n    setDragOverImageId(null)\n  }\n\n  const handleEditComplete = (translatedImageUrl: string) => {\n    if (editingImageId) {\n      setImages(prev => {\n        const updated = prev.map(img => \n          img.id === editingImageId \n            ? { ...img, url: translatedImageUrl }\n            : img\n        )\n        // 직접 알림 제거 - useEffect가 처리함\n        return updated\n      })\n    }\n    \n    setEditingImage(null)\n    setEditingImageId(null)\n  }\n\n  const handleEditCancel = () => {\n    setEditingImage(null)\n    setEditingImageId(null)\n  }\n\n  const handleDrop = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(false)\n    \n    const files = e.dataTransfer.files\n    if (files.length > 0) {\n      handleFileUpload(files)\n    }\n  }\n\n  const handleDragOver = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(true)\n  }\n\n  const handleDragLeave = (e: DragEvent<HTMLDivElement>) => {\n    e.preventDefault()\n    setIsDragOver(false)\n  }\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (files && files.length > 0) {\n      handleFileUpload(files)\n    }\n  }\n\n  const handleClick = () => {\n    if (images.length < maxImages) {\n      fileInputRef.current?.click()\n    }\n  }\n\n  // 편집 모드인 경우\n  if (editingImage) {\n    const ImageTranslator = React.lazy(() => import('./ImageTranslator'))\n    \n    return (\n      <div className=\"w-full\">\n        <div className=\"mb-4 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <h3 className=\"text-lg font-medium text-blue-900 mb-2\">이미지 번역 편집</h3>\n          <p className=\"text-sm text-blue-700\">선택된 이미지를 편집하고 있습니다. 완료 후 이미지 목록으로 돌아갑니다.</p>\n        </div>\n        \n        <React.Suspense fallback={<div className=\"text-center py-8\">에디터 로딩 중...</div>}>\n          <ImageTranslator\n            imageFile={editingImage}\n            onTranslationComplete={handleEditComplete}\n            onCancel={handleEditCancel}\n          />\n        </React.Suspense>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        onChange={handleFileSelect}\n        className=\"hidden\"\n      />\n\n      {/* 업로드된 이미지들 */}\n      {images.length > 0 && (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-sm font-medium text-gray-700\">업로드된 이미지 ({images.length}개)</h4>\n            <p className=\"text-xs text-gray-500\">드래그하거나 화살표로 순서 변경</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {images.map((image, index) => (\n              <div \n                key={image.id} \n                className={`relative group border-2 rounded-lg transition-all ${\n                  draggedImageId === image.id ? 'opacity-50' : 'opacity-100'\n                } ${\n                  dragOverImageId === image.id ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                }`}\n                draggable\n                onDragStart={(e) => handleImageDragStart(e, image.id)}\n                onDragOver={(e) => handleImageDragOver(e, image.id)}\n                onDragLeave={handleImageDragLeave}\n                onDrop={(e) => handleImageDrop(e, image.id)}\n              >\n                {/* 순서 번호 */}\n                <div className=\"absolute top-2 left-2 bg-black bg-opacity-70 text-white text-xs px-2 py-1 rounded-full z-10\">\n                  {index + 1}\n                </div>\n                \n                {/* 드래그 핸들 */}\n                <div className=\"absolute top-2 right-2 bg-black bg-opacity-70 text-white p-1 rounded cursor-move z-10\">\n                  <GripVertical className=\"h-4 w-4\" />\n                </div>\n                \n                <div className=\"aspect-video rounded-lg overflow-hidden\">\n                  <img \n                    src={image.url} \n                    alt={`이미지 ${index + 1}`} \n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                \n                {/* 이미지 액션 버튼들 */}\n                <div className=\"absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center\">\n                  <div className=\"flex flex-col gap-2\">\n                    {/* 순서 변경 버튼들 */}\n                    <div className=\"flex gap-2\">\n                      <button\n                        type=\"button\"\n                        onClick={() => handleMoveUp(image.id)}\n                        disabled={index === 0}\n                        className=\"p-2 bg-gray-600 text-white rounded-full hover:bg-gray-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                        title=\"위로 이동\"\n                      >\n                        <ChevronUp className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleMoveDown(image.id)}\n                        disabled={index === images.length - 1}\n                        className=\"p-2 bg-gray-600 text-white rounded-full hover:bg-gray-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                        title=\"아래로 이동\"\n                      >\n                        <ChevronDown className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                    \n                    {/* 편집/삭제 버튼들 */}\n                    <div className=\"flex gap-2\">\n                      {image.file && (\n                        <button\n                          type=\"button\"\n                          onClick={() => handleEditImage(image.id)}\n                          className=\"p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-colors\"\n                          title=\"이미지 편집\"\n                        >\n                          <Edit3 className=\"h-4 w-4\" />\n                        </button>\n                      )}\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRemoveImage(image.id)}\n                        className=\"p-2 bg-red-600 text-white rounded-full hover:bg-red-700 transition-colors\"\n                        title=\"이미지 삭제\"\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* 새 이미지 업로드 영역 */}\n      {images.length < maxImages && (\n        <div\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onClick={handleClick}\n          className={`relative border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors ${\n            isDragOver\n              ? 'border-blue-500 bg-blue-50'\n              : 'border-gray-300 hover:border-gray-400'\n          } ${isUploading ? 'pointer-events-none opacity-50' : ''}`}\n        >\n          {isUploading ? (\n            <div className=\"flex flex-col items-center gap-3\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-blue-600\" />\n              <p className=\"text-gray-600\">이미지 업로드 중...</p>\n            </div>\n          ) : (\n            <div className=\"flex flex-col items-center gap-3\">\n              <div className=\"p-3 bg-gray-100 rounded-full\">\n                {images.length === 0 ? (\n                  <ImageIcon className=\"h-8 w-8 text-gray-600\" />\n                ) : (\n                  <Plus className=\"h-8 w-8 text-gray-600\" />\n                )}\n              </div>\n              <div>\n                <p className=\"text-lg font-medium text-gray-900\">\n                  {images.length === 0 ? '이미지 업로드' : '이미지 추가'}\n                </p>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  이미지를 드래그하거나 클릭하여 업로드 ({images.length}/{maxImages})\n                </p>\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  PNG, JPG, GIF 지원 • 여러 이미지 동시 업로드 가능\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 도움말 */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">💡 사용법</h4>\n        <ul className=\"text-xs text-gray-600 space-y-1\">\n          <li>• 여러 이미지를 한 번에 업로드할 수 있습니다</li>\n          <li>• 이미지를 드래그하여 순서를 변경할 수 있습니다</li>\n          <li>• 이미지 위에 마우스를 올리면 편집/삭제/순서변경 버튼이 나타납니다</li>\n          <li>• 편집 버튼을 클릭하면 한국어 텍스트를 번역할 수 있습니다</li>\n          <li>• 최대 {maxImages}개의 이미지까지 업로드 가능합니다</li>\n        </ul>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1220, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/components/ProtectedRoute.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport { useAuth } from '@/lib/auth'\nimport { Shield, Lock } from 'lucide-react'\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode\n  fallback?: React.ReactNode\n  redirectTo?: string\n}\n\nexport function ProtectedRoute({ children, fallback, redirectTo = '/login' }: ProtectedRouteProps) {\n  const { isAuthenticated, isLoading } = useAuth()\n  const [hasSecretAccess, setHasSecretAccess] = useState(false)\n  const [isChecking, setIsChecking] = useState(true)\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  useEffect(() => {\n    // 비밀 액세스 키 확인\n    const accessKey = searchParams.get('access')\n    const secretKey = 'korean-memes-secret-2024' // 환경변수와 동일하게\n    \n    if (accessKey === secretKey) {\n      setHasSecretAccess(true)\n      // 비밀 키로 접근할 때는 URL에서 access 파라미터 제거\n      const newUrl = new URL(window.location.href)\n      newUrl.searchParams.delete('access')\n      window.history.replaceState({}, '', newUrl.toString())\n    }\n    \n    setIsChecking(false)\n  }, [searchParams])\n\n  // 로딩 중\n  if (isLoading || isChecking) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">권한을 확인하는 중...</p>\n        </div>\n      </div>\n    )\n  }\n\n  // 인증되지 않았고 비밀 액세스도 없는 경우\n  if (!isAuthenticated && !hasSecretAccess) {\n    if (fallback) {\n      return <>{fallback}</>\n    }\n\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <div className=\"text-center\">\n            <Shield className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">접근 권한이 필요합니다</h2>\n            <p className=\"text-gray-600 mb-6\">\n              이 페이지에 접근하려면 관리자 로그인이 필요합니다.\n            </p>\n            <div className=\"space-y-3\">\n              <button\n                onClick={() => {\n                  const currentPath = window.location.pathname + window.location.search\n                  router.push(`${redirectTo}?returnTo=${encodeURIComponent(currentPath)}`)\n                }}\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                로그인하기\n              </button>\n              <button\n                onClick={() => router.push('/')}\n                className=\"w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors\"\n              >\n                홈으로 돌아가기\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // 권한이 있는 경우 - 비밀 액세스로 접근했다면 알림 표시\n  return (\n    <>\n      {hasSecretAccess && (\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4\">\n          <div className=\"flex items-center\">\n            <Lock className=\"h-5 w-5 text-yellow-400 mr-2\" />\n            <p className=\"text-sm text-yellow-700\">\n              <strong>비밀 액세스로 접근했습니다.</strong> 관리자 권한으로 모든 기능을 사용할 수 있습니다.\n            </p>\n          </div>\n        </div>\n      )}\n      {children}\n    </>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;AAaO,SAAS,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,QAAQ,EAAuB;IAC/F,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc;QACd,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,MAAM,YAAY,2BAA2B,aAAa;;QAE1D,IAAI,cAAc,WAAW;YAC3B,mBAAmB;YACnB,oCAAoC;YACpC,MAAM,SAAS,IAAI,IAAI,OAAO,QAAQ,CAAC,IAAI;YAC3C,OAAO,YAAY,CAAC,MAAM,CAAC;YAC3B,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,OAAO,QAAQ;QACrD;QAEA,cAAc;IAChB,GAAG;QAAC;KAAa;IAEjB,OAAO;IACP,IAAI,aAAa,YAAY;QAC3B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;;;;;;IAIrC;IAEA,yBAAyB;IACzB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB;QACxC,IAAI,UAAU;YACZ,qBAAO;0BAAG;;QACZ;QAEA,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,sMAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;sCAClB,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAGlC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;wCACP,MAAM,cAAc,OAAO,QAAQ,CAAC,QAAQ,GAAG,OAAO,QAAQ,CAAC,MAAM;wCACrE,OAAO,IAAI,CAAC,GAAG,WAAW,UAAU,EAAE,mBAAmB,cAAc;oCACzE;oCACA,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb;IAEA,kCAAkC;IAClC,qBACE;;YACG,iCACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAE,WAAU;;8CACX,8OAAC;8CAAO;;;;;;gCAAwB;;;;;;;;;;;;;;;;;;YAKvC;;;AAGP","debugId":null}},
    {"offset": {"line": 1428, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/app/edit/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { useParams, useRouter } from 'next/navigation'\nimport { \n  ImageIcon, \n  Type, \n  Globe,\n  Save,\n  Eye,\n  ArrowLeft,\n  Loader2\n} from 'lucide-react'\nimport Link from 'next/link'\nimport { ImageUpload } from '@/components/ImageUpload'\nimport { MultipleImageUpload } from '@/components/MultipleImageUpload'\nimport { ProtectedRoute } from '@/components/ProtectedRoute'\n\nexport default function EditPage() {\n  const params = useParams()\n  const router = useRouter()\n  const [loading, setLoading] = useState(true)\n  const [title, setTitle] = useState('')\n  const [koreanTitle, setKoreanTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [koreanContent, setKoreanContent] = useState('')\n  const [category, setCategory] = useState('HUMOR')\n  const [imageUrl, setImageUrl] = useState('')\n  const [imageUrls, setImageUrls] = useState<string[]>([])\n  const [multipleImagesMode, setMultipleImagesMode] = useState(false)\n  const [isPreview, setIsPreview] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isTranslatingTitle, setIsTranslatingTitle] = useState(false)\n  const [isTranslatingContent, setIsTranslatingContent] = useState(false)\n  const [manualComments, setManualComments] = useState<string[]>([''])\n  const [translatedComments, setTranslatedComments] = useState<string[]>([''])\n  const [isTranslatingComments, setIsTranslatingComments] = useState<boolean[]>([])\n  \n  const postId = params?.id as string\n\n  const categories = [\n    { value: 'HUMOR', label: 'K-Humor 😂', description: 'Korean humor, memes, funny content' },\n    { value: 'CULTURE', label: 'K-Culture 🏮', description: 'Korean culture, traditions, customs' },\n    { value: 'DRAMA', label: 'K-Drama 📺', description: 'K-Drama, entertainment, celebrities' },\n    { value: 'LIFESTYLE', label: 'K-Lifestyle 🌸', description: 'Korean daily life, lifestyle' },\n    { value: 'TECH', label: 'K-Tech 💻', description: 'Korean IT, startups, technology' },\n    { value: 'GENERAL', label: 'General 💬', description: 'Other Korean-related topics' },\n  ]\n\n  // 기존 포스트 데이터 로드\n  useEffect(() => {\n    if (!postId) return\n\n    const fetchPost = async () => {\n      try {\n        setLoading(true)\n        const response = await fetch(`/api/posts/${postId}`)\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch post')\n        }\n\n        const data = await response.json()\n        const postData = data.post\n        \n        // 폼 필드에 기존 데이터 설정\n        setTitle(postData.title || '')\n        setKoreanTitle(postData.koreanTitle || '')\n        setContent(postData.content || '')\n        setKoreanContent(postData.koreanContent || '')\n        setCategory(postData.category || 'HUMOR')\n        setImageUrl(postData.imageUrl || '')\n        \n        // 기존 댓글 설정\n        const existingComments = postData.extractedComments || []\n        const existingTranslated = postData.translatedComments || []\n        setManualComments(existingComments.length > 0 ? existingComments : [''])\n        setTranslatedComments(existingTranslated.length > 0 ? existingTranslated : [''])\n        \n        // 다중 이미지 설정\n        const additionalImages = postData.additionalImages || []\n        if (additionalImages.length > 0) {\n          // 첫 번째 이미지가 있으면 다중 모드로 설정\n          const allImages = postData.imageUrl ? [postData.imageUrl, ...additionalImages] : additionalImages\n          setImageUrls(allImages)\n          setMultipleImagesMode(true)\n        } else if (postData.imageUrl) {\n          // 단일 이미지만 있는 경우\n          setMultipleImagesMode(false)\n        }\n        \n      } catch (err) {\n        console.error('Error fetching post:', err)\n        alert('게시글을 불러오는데 실패했습니다.')\n        router.push('/')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchPost()\n  }, [postId, router])\n\n  // 한글 타이틀 자동 번역\n  useEffect(() => {\n    const translateKoreanTitle = async () => {\n      if (!koreanTitle.trim()) {\n        setTitle('')\n        return\n      }\n\n      // 한글이 포함되어 있는지 확인\n      const koreanRegex = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/\n      if (!koreanRegex.test(koreanTitle)) {\n        return\n      }\n\n      setIsTranslatingTitle(true)\n      \n      try {\n        const response = await fetch('/api/translate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            text: koreanTitle\n          })\n        })\n\n        const result = await response.json()\n        \n        if (result.success && result.translatedText) {\n          setTitle(result.translatedText)\n        }\n      } catch (error) {\n        console.error('Title translation error:', error)\n      } finally {\n        setIsTranslatingTitle(false)\n      }\n    }\n\n    // 디바운스: 1초 후에 번역 실행\n    const timeoutId = setTimeout(translateKoreanTitle, 1000)\n    \n    return () => clearTimeout(timeoutId)\n  }, [koreanTitle])\n\n  // 한글 콘텐츠 자동 번역\n  useEffect(() => {\n    const translateKoreanContent = async () => {\n      if (!koreanContent.trim()) {\n        setContent('')\n        return\n      }\n\n      // 한글이 포함되어 있는지 확인\n      const koreanRegex = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/\n      if (!koreanRegex.test(koreanContent)) {\n        return\n      }\n\n      setIsTranslatingContent(true)\n      \n      try {\n        const response = await fetch('/api/translate', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            text: koreanContent\n          })\n        })\n\n        const result = await response.json()\n        \n        if (result.success && result.translatedText) {\n          setContent(result.translatedText)\n        }\n      } catch (error) {\n        console.error('Content translation error:', error)\n      } finally {\n        setIsTranslatingContent(false)\n      }\n    }\n\n    // 디바운스: 1초 후에 번역 실행\n    const timeoutId = setTimeout(translateKoreanContent, 1000)\n    \n    return () => clearTimeout(timeoutId)\n  }, [koreanContent])\n\n  // 댓글 번역 함수\n  const translateComment = async (commentText: string, index: number) => {\n    if (!commentText.trim()) {\n      const newTranslated = [...translatedComments]\n      newTranslated[index] = ''\n      setTranslatedComments(newTranslated)\n      return\n    }\n\n    const koreanRegex = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/\n    if (!koreanRegex.test(commentText)) {\n      return\n    }\n\n    if (isTranslatingComments[index]) {\n      return\n    }\n\n    const newTranslating = [...isTranslatingComments]\n    newTranslating[index] = true\n    setIsTranslatingComments(newTranslating)\n    \n    try {\n      const response = await fetch('/api/translate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text: commentText\n        })\n      })\n\n      const result = await response.json()\n      \n      if (result.success && result.translatedText) {\n        const newTranslated = [...translatedComments]\n        newTranslated[index] = result.translatedText\n        setTranslatedComments(newTranslated)\n      }\n    } catch (error) {\n      console.error('Comment translation error:', error)\n    } finally {\n      const newTranslating = [...isTranslatingComments]\n      newTranslating[index] = false\n      setIsTranslatingComments(newTranslating)\n    }\n  }\n\n  // 댓글 업데이트 시 번역도 함께 처리\n  const updateComment = (index: number, value: string) => {\n    const newComments = [...manualComments]\n    newComments[index] = value\n    setManualComments(newComments)\n\n    setTimeout(() => {\n      translateComment(value, index)\n    }, 1000)\n  }\n\n  // 댓글 추가 시 번역 배열도 확장\n  const addComment = () => {\n    setManualComments([...manualComments, ''])\n    setTranslatedComments([...translatedComments, ''])\n  }\n\n  // 댓글 제거 시 번역 배열도 축소\n  const removeComment = (index: number) => {\n    const newComments = manualComments.filter((_, i) => i !== index)\n    const newTranslated = translatedComments.filter((_, i) => i !== index)\n    setManualComments(newComments.length === 0 ? [''] : newComments)\n    setTranslatedComments(newTranslated.length === 0 ? [''] : newTranslated)\n  }\n\n  // 일괄 댓글 입력 시 번역도 함께 처리\n  const handleBulkComments = async (text: string) => {\n    const parsedComments = parseCommentsText(text)\n    if (parsedComments.length > 0) {\n      setManualComments(parsedComments)\n      \n      // 번역 배열 초기화\n      const initialTranslated = new Array(parsedComments.length).fill('')\n      setTranslatedComments(initialTranslated)\n      \n      // 각 댓글을 순차적으로 번역 (Promise.all 사용으로 병렬 처리)\n      const translationPromises = parsedComments.map(async (comment, index) => {\n        if (!comment.trim()) return ''\n        \n        const koreanRegex = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/\n        if (!koreanRegex.test(comment)) return ''\n\n        try {\n          const response = await fetch('/api/translate', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              text: comment\n            })\n          })\n\n          const result = await response.json()\n          return result.success && result.translatedText ? result.translatedText : ''\n        } catch (error) {\n          console.error(`Comment ${index + 1} translation error:`, error)\n          return ''\n        }\n      })\n\n      // 모든 번역이 완료된 후 상태 업데이트\n      const translatedResults = await Promise.all(translationPromises)\n      setTranslatedComments(translatedResults)\n    }\n  }\n\n  // 최종 댓글 리스트\n  const finalComments = manualComments.filter(comment => comment.trim().length > 0)\n  const finalTranslatedComments = translatedComments.filter((comment, index) => \n    manualComments[index]?.trim().length > 0 && comment.trim().length > 0\n  )\n\n  // 댓글 텍스트 파싱 함수\n  const parseCommentsText = (text: string): string[] => {\n    const lines = text.split('\\n').map(line => line.trim()).filter(line => line)\n    const comments: string[] = []\n    \n    console.log('=== 댓글 파싱 시작 ===')\n    console.log('총 라인 수:', lines.length)\n    console.log('처음 5줄:', lines.slice(0, 5))\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i]\n      console.log(`[${i}] 분석 중:`, line.substring(0, 50))\n      \n      // 방법 1: 베스트 댓글 패턴\n      if (line.includes('베스트') && line.includes('\\t')) {\n        // 현재 줄에서 댓글 내용 추출 시도\n        const parts = line.split('\\t')\n        if (parts.length > 1) {\n          const bestCommentText = parts[parts.length - 1].replace(/\\[\\d+\\]/g, '').trim()\n          if (bestCommentText && bestCommentText.length > 5 && !/^\\d+\\s*\\d*$/.test(bestCommentText)) {\n            console.log(`베스트 댓글 발견 (현재 줄):`, bestCommentText)\n            comments.push(bestCommentText)\n            continue\n          }\n        }\n        \n        // 다음 줄에서 댓글 내용 찾기\n        if (i + 1 < lines.length) {\n          const nextLine = lines[i + 1]\n          const bestNextCommentText = nextLine.replace(/\\[\\d+\\]/g, '').trim()\n          \n          if (bestNextCommentText && bestNextCommentText.length > 5 && \n              !bestNextCommentText.includes('추천') && !bestNextCommentText.includes('반대') &&\n              !/^\\d+\\s*\\d*$/.test(bestNextCommentText)) {\n            console.log(`베스트 댓글 발견 (다음 줄):`, bestNextCommentText)\n            comments.push(bestNextCommentText)\n            i++ // 다음 줄을 건너뛰기\n            continue\n          }\n        }\n      }\n      \n      // 방법 2: 탭 구분 일반 댓글 패턴\n      if (line.includes('\\t')) {\n        const parts = line.split('\\t')\n        if (parts.length >= 2) {\n          // 현재 줄에서 댓글 내용 추출 시도\n          const generalCommentText = parts[parts.length - 1].trim()\n          if (generalCommentText && generalCommentText.length > 5 &&\n              !generalCommentText.includes('추천') && !generalCommentText.includes('반대') &&\n              !generalCommentText.includes('이동') && !generalCommentText.includes('답글') &&\n              !/^\\d+\\s*\\d*$/.test(generalCommentText)) {\n            console.log(`일반 댓글 발견 (현재 줄):`, generalCommentText)\n            comments.push(generalCommentText)\n            continue\n          }\n          \n          // 다음 줄에서 댓글 내용 찾기\n          if (i + 1 < lines.length) {\n            const nextLine = lines[i + 1]\n            const generalNextCommentText = nextLine.trim()\n            \n            if (generalNextCommentText && generalNextCommentText.length > 5 &&\n                !generalNextCommentText.includes('추천') && !generalNextCommentText.includes('반대') &&\n                !generalNextCommentText.includes('이동') && !generalNextCommentText.includes('답글') &&\n                !/^\\d+\\s*\\d*$/.test(generalNextCommentText)) {\n              console.log(`일반 댓글 발견 (다음 줄):`, generalNextCommentText)\n              comments.push(generalNextCommentText)\n              i++ // 다음 줄을 건너뛰기\n              continue\n            }\n          }\n        }\n      }\n      \n      // 방법 3: 직접 댓글 패턴 (한글 + 감정표현)\n      if (/[ㄱ-ㅎㅏ-ㅣ가-힣]/.test(line) && \n          /[ㅋㅎㅠㅜㄷ;;!?]/.test(line) &&\n          !line.includes('로그인') && !line.includes('회원가입') &&\n          !line.includes('메뉴') && !line.includes('검색') &&\n          !line.includes('추천') && !line.includes('반대') &&\n          line.length >= 5 && line.length <= 200) {\n        console.log(`직접 댓글 패턴 발견:`, line)\n        comments.push(line)\n      }\n    }\n    \n    console.log('=== 파싱 결과 ===')\n    console.log('추출된 댓글 수:', comments.length)\n    console.log('댓글 목록:', comments)\n    \n    // 중복 제거 및 최대 10개 제한\n    const uniqueComments = [...new Set(comments)].slice(0, 10)\n    console.log('최종 댓글 수:', uniqueComments.length)\n    \n    return uniqueComments\n  }\n\n  // 이미지 URL 변경 핸들러 메모이제이션\n  const handleImageUrlsChange = useCallback((urls: string[]) => {\n    // 초기화 조건 제거 - 항상 상태 업데이트\n    setImageUrls(urls)\n  }, [])\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n\n    try {\n      // 번역된 이미지 자동 처리 - 다중 모드인 경우 첫 번째 이미지 사용, 단일 모드인 경우 기존 로직\n      const finalImageUrl = multipleImagesMode \n        ? (imageUrls.length > 0 ? imageUrls[0] : '') \n        : imageUrl\n      \n      // 번역된 추가 이미지들 자동 포함\n      const finalAdditionalImages = multipleImagesMode ? imageUrls.slice(1) : []\n\n      const response = await fetch(`/api/posts/${postId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title,\n          koreanTitle,\n          content,\n          koreanContent,\n          category,\n          imageUrl: finalImageUrl,\n          additionalImages: finalAdditionalImages, // 번역된 이미지들 포함\n          extractedComments: finalComments.length > 0 ? finalComments : null,\n          translatedComments: finalTranslatedComments.length > 0 ? finalTranslatedComments : null,\n        }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.error || 'Failed to update post')\n      }\n\n      const result = await response.json()\n      console.log('Post updated successfully:', result)\n      \n      // 성공 시 게시글 상세 페이지로 리다이렉트\n      router.push(`/post/${postId}`)\n      \n    } catch (error) {\n      console.error('Post update error:', error)\n      alert(`게시글 수정에 실패했습니다: ${error instanceof Error ? error.message : '알 수 없는 오류'}`)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleImageUploaded = (url: string) => {\n    setImageUrl(url)\n  }\n\n  const handleRemoveImage = () => {\n    setImageUrl('')\n  }\n\n  if (loading) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center py-12\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-blue-600\" />\n          <span className=\"ml-3 text-gray-600\">Loading post...</span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <ProtectedRoute>\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center gap-4\">\n            <Link \n              href={`/post/${postId}`}\n              className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors\"\n            >\n              <ArrowLeft className=\"h-5 w-5\" />\n              Back to Post\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Edit Post</h1>\n              <p className=\"text-gray-600\">Update your Korean culture content</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <button\n              type=\"button\"\n              onClick={() => setIsPreview(!isPreview)}\n              className=\"flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              <Eye className=\"h-4 w-4\" />\n              {isPreview ? 'Edit' : 'Preview'}\n            </button>\n          </div>\n        </div>\n\n        {!isPreview ? (\n          /* Edit Mode */\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Category Selection */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Select Category\n              </label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {categories.map((cat) => (\n                  <label key={cat.value} className=\"relative\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={cat.value}\n                      checked={category === cat.value}\n                      onChange={(e) => setCategory(e.target.value)}\n                      className=\"sr-only\"\n                    />\n                    <div className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                      category === cat.value \n                        ? 'border-blue-500 bg-blue-50' \n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}>\n                      <div className=\"font-medium text-gray-900\">{cat.label}</div>\n                      <div className=\"text-sm text-gray-600 mt-1\">{cat.description}</div>\n                    </div>\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            {/* Title */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-2\">\n                    <Type className=\"h-4 w-4\" />\n                    Korean Original Title\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={koreanTitle}\n                    onChange={(e) => setKoreanTitle(e.target.value)}\n                    placeholder=\"e.g., Korean Workplace Culture: The Mysterious World of 'Nunchi'\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-2\">\n                    <Globe className=\"h-4 w-4\" />\n                    English Title\n                    {isTranslatingTitle && (\n                      <span className=\"text-xs text-blue-600 flex items-center gap-1\">\n                        <Loader2 className=\"h-3 w-3 animate-spin\" />\n                        Translating...\n                      </span>\n                    )}\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"e.g., Korean Office Culture: The Mystery of 'Nunchi' Explained\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    required\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    English title will be automatically translated when you type Korean title\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Image Upload */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700\">\n                  <ImageIcon className=\"h-4 w-4\" />\n                  Featured Images (Optional)\n                </label>\n                \n                {/* 단일/다중 이미지 모드 선택 */}\n                <div className=\"flex items-center gap-3\">\n                  <span className=\"text-sm text-gray-600\">Mode:</span>\n                  <label className=\"flex items-center gap-2 cursor-pointer\">\n                    <input\n                      type=\"radio\"\n                      name=\"imageMode\"\n                      checked={!multipleImagesMode}\n                      onChange={() => setMultipleImagesMode(false)}\n                      className=\"text-blue-600\"\n                    />\n                    <span className=\"text-sm\">Single</span>\n                  </label>\n                  <label className=\"flex items-center gap-2 cursor-pointer\">\n                    <input\n                      type=\"radio\"\n                      name=\"imageMode\"\n                      checked={multipleImagesMode}\n                      onChange={() => setMultipleImagesMode(true)}\n                      className=\"text-blue-600\"\n                    />\n                    <span className=\"text-sm\">Multiple</span>\n                  </label>\n                </div>\n              </div>\n\n              {multipleImagesMode ? (\n                <MultipleImageUpload\n                  onImagesChange={handleImageUrlsChange}\n                  currentImages={imageUrls}\n                  maxImages={5}\n                />\n              ) : (\n                <ImageUpload\n                  onImageUploaded={handleImageUploaded}\n                  currentImage={imageUrl}\n                  onRemoveImage={handleRemoveImage}\n                />\n              )}\n            </div>\n\n            {/* Content */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-2\">\n                    <Type className=\"h-4 w-4\" />\n                    Korean Original Content (Optional)\n                  </label>\n                  <textarea\n                    value={koreanContent}\n                    onChange={(e) => setKoreanContent(e.target.value)}\n                    placeholder=\"Enter original content about Korean culture or humor...\"\n                    rows={6}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-vertical\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-2\">\n                    <Globe className=\"h-4 w-4\" />\n                    English Translation Content (Optional)\n                    {isTranslatingContent && (\n                      <span className=\"text-xs text-blue-600 flex items-center gap-1\">\n                        <Loader2 className=\"h-3 w-3 animate-spin\" />\n                        Translating...\n                      </span>\n                    )}\n                  </label>\n                  <textarea\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                    placeholder=\"Translate and explain Korean culture or humor in English...\"\n                    rows={10}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-vertical\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    English content will be automatically translated when you type Korean content\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Best Comments Section - 수동 입력 방식으로 변경 */}\n            <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"flex items-center gap-2 text-sm font-medium text-gray-700 mb-2\">\n                    <Globe className=\"h-4 w-4\" />\n                    Korean Community Comments (Optional)\n                  </label>\n                  <p className=\"text-xs text-gray-500 mb-4\">\n                    Add best comments from Korean community sites manually\n                  </p>\n                  \n                  {/* 일괄 입력 기능 */}\n                  <div className=\"mb-4 p-4 bg-gray-50 rounded-lg\">\n                    <h5 className=\"text-sm font-medium text-gray-700 mb-2\">\n                      💡 Quick Input: Paste copied comment text\n                    </h5>\n                    <textarea\n                      placeholder=\"Paste comment text copied from Korean community sites here...\"\n                      rows={4}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-sm\"\n                      onPaste={(e) => {\n                        e.preventDefault()\n                        const text = e.clipboardData.getData('text')\n                        handleBulkComments(text)\n                      }}\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Only comment content will be automatically extracted when pasted\n                    </p>\n                  </div>\n                </div>\n                \n                {manualComments.map((comment, index) => (\n                  <div key={index} className=\"space-y-2\">\n                    <div className=\"flex gap-2\">\n                      <div className=\"flex-1\">\n                        <div className=\"space-y-2\">\n                          <div>\n                            <label className=\"text-xs text-gray-600 mb-1 block\">\n                              Korean Original\n                              {isTranslatingComments[index] && (\n                                <span className=\"ml-2 text-blue-600 flex items-center gap-1 inline-flex\">\n                                  <Loader2 className=\"h-3 w-3 animate-spin\" />\n                                  Translating...\n                                </span>\n                              )}\n                            </label>\n                            <textarea\n                              value={comment}\n                              onChange={(e) => updateComment(index, e.target.value)}\n                              placeholder={`Enter comment ${index + 1}...`}\n                              rows={2}\n                              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                            />\n                          </div>\n                          \n                          {translatedComments[index] && (\n                            <div>\n                              <label className=\"text-xs text-gray-600 mb-1 block\">\n                                English Translation\n                              </label>\n                              <div className=\"w-full px-3 py-2 bg-blue-50 border border-blue-200 rounded-lg text-sm text-gray-700\">\n                                {translatedComments[index]}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col gap-1\">\n                        {index === manualComments.length - 1 && (\n                          <button\n                            type=\"button\"\n                            onClick={addComment}\n                            className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n                          >\n                            +\n                          </button>\n                        )}\n                        {manualComments.length > 1 && (\n                          <button\n                            type=\"button\"\n                            onClick={() => removeComment(index)}\n                            className=\"px-3 py-1 bg-red-600 text-white text-sm rounded hover:bg-red-700 transition-colors\"\n                          >\n                            ×\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                {finalComments.length > 0 && (\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-3\">\n                      Preview ({finalComments.length} comments)\n                    </h4>\n                    <div className=\"space-y-3 max-h-60 overflow-y-auto\">\n                      {finalComments.map((comment, index) => (\n                        <div key={index} className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                          <div className=\"space-y-2\">\n                            <div>\n                              <span className=\"text-xs text-blue-600 font-medium\">Korean:</span>\n                              <p className=\"text-sm text-gray-700 leading-relaxed\">\n                                {comment}\n                              </p>\n                            </div>\n                            {finalTranslatedComments[index] && (\n                              <div>\n                                <span className=\"text-xs text-green-600 font-medium\">English:</span>\n                                <p className=\"text-sm text-gray-700 leading-relaxed\">\n                                  {finalTranslatedComments[index]}\n                                </p>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <p className=\"text-xs text-green-600 mt-2\">\n                      ✓ These comments will be displayed at the bottom of your post in both languages\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Submit Buttons */}\n            <div className=\"flex justify-end gap-4\">\n              <Link\n                href={`/post/${postId}`}\n                className=\"px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors\"\n              >\n                Cancel\n              </Link>\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !title.trim() || !koreanTitle.trim()}\n                className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    Updating...\n                  </>\n                ) : (\n                  <>\n                    <Save className=\"h-4 w-4\" />\n                    Update Post\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n        ) : (\n          /* Preview Mode */\n          <div className=\"bg-white rounded-lg shadow-sm border p-8\">\n            <div className=\"max-w-3xl mx-auto\">\n              {/* Preview Header */}\n              <div className=\"mb-6\">\n                <span className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm font-medium\">\n                  {categories.find(cat => cat.value === category)?.label}\n                </span>\n              </div>\n\n              {/* Preview Title */}\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n                {title || 'Your English Title'}\n              </h1>\n              {koreanTitle && (\n                <p className=\"text-gray-600 italic mb-6\">\n                  Original: {koreanTitle}\n                </p>\n              )}\n\n              {/* Preview Image */}\n              {imageUrl && (\n                <div className=\"mb-6\">\n                  <img \n                    src={imageUrl} \n                    alt=\"Featured\" \n                    className=\"w-full max-w-2xl mx-auto rounded-lg\"\n                  />\n                </div>\n              )}\n\n              {/* Preview Content */}\n              <div className=\"prose max-w-none\">\n                <div className=\"whitespace-pre-wrap text-gray-800 leading-relaxed\">\n                  {content || 'Your English content will appear here...'}\n                </div>\n                \n                {koreanContent && (\n                  <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Korean Original</h3>\n                    <div className=\"whitespace-pre-wrap text-gray-700 leading-relaxed\">\n                      {koreanContent}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </ProtectedRoute>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}