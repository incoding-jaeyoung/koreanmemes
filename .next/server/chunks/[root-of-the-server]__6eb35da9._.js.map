{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/damanegi/Desktop/dev/KoreanMemes/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport jwt from 'jsonwebtoken'\n\nconst ADMIN_EMAIL = process.env.ADMIN_EMAIL || 'admin@koreanmemes.com'\nconst ADMIN_PASSWORD = process.env.ADMIN_PASSWORD || 'admin123'\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-super-secret-jwt-key'\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { email, password } = await request.json()\n\n    // 간단한 관리자 계정 확인\n    if (email === ADMIN_EMAIL && password === ADMIN_PASSWORD) {\n      // JWT 토큰 생성\n      const token = jwt.sign(\n        { \n          email: ADMIN_EMAIL,\n          role: 'admin',\n          exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24시간\n        },\n        JWT_SECRET\n      )\n\n      const response = NextResponse.json({\n        success: true,\n        message: '로그인 성공',\n        user: {\n          email: ADMIN_EMAIL,\n          role: 'admin'\n        }\n      })\n\n      // HTTP-Only 쿠키로 토큰 설정\n      response.cookies.set('auth-token', token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        sameSite: 'lax',\n        maxAge: 24 * 60 * 60 // 24시간\n      })\n\n      return response\n    }\n\n    return NextResponse.json({\n      success: false,\n      message: '이메일 또는 비밀번호가 올바르지 않습니다.'\n    }, { status: 401 })\n\n  } catch (error) {\n    console.error('Login error:', error)\n    return NextResponse.json({\n      success: false,\n      message: '로그인 처리 중 오류가 발생했습니다.'\n    }, { status: 500 })\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAC/C,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc,IAAI;AACrD,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE9C,gBAAgB;QAChB,IAAI,UAAU,eAAe,aAAa,gBAAgB;YACxD,YAAY;YACZ,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CACpB;gBACE,OAAO;gBACP,MAAM;gBACN,KAAK,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,QAAS,KAAK,KAAK,GAAI,OAAO;YAC7D,GACA;YAGF,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACjC,SAAS;gBACT,SAAS;gBACT,MAAM;oBACJ,OAAO;oBACP,MAAM;gBACR;YACF;YAEA,sBAAsB;YACtB,SAAS,OAAO,CAAC,GAAG,CAAC,cAAc,OAAO;gBACxC,UAAU;gBACV,QAAQ,oDAAyB;gBACjC,UAAU;gBACV,QAAQ,KAAK,KAAK,GAAG,OAAO;YAC9B;YAEA,OAAO;QACT;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;QACX,GAAG;YAAE,QAAQ;QAAI;IAEnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;QACX,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}